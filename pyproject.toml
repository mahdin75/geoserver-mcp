[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "geoserver-mcp-server"
version = "0.1.0"
description = "A GeoServer MCP server implementation that enhances LLM capabilities with geospatial data and mapping services via GeoServer REST API"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "GeoServer MCP Contributors"},
]
keywords = ["mcp", "geoserver", "llm", "geospatial", "ogc", "wfs", "wms"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "mcp @ git+https://github.com/modelcontextprotocol/python-sdk.git",
    "geoserver-rest @ git+https://github.com/gicait/geoserver-rest.git",
    "aiohttp>=3.8.0",
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "shapely>=2.0.0",
    "geojson>=3.0.0",
    "lxml>=4.9.0",  # Required by geoserver-rest
    "owslib>=0.29.0",  # Required by geoserver-rest
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.3.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
geoserver-mcp-server = "geoserver_mcp_server.main:main"

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "I", "W", "C90", "B", "UP", "N", "PL", "RUF"]
ignore = []
extend-exclude = ["venv", ".venv", ".git"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=geoserver_mcp_server"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]